# Group Servers

A Server represent a public multiplayer Running With Rifles game.

## Servers [/servers{?location,map,type,mode,dedicated,ranked,not_empty,not_full,limit}]

+ Parameters
  + `location`: `continent:eu` (optional)
      Servers country or continent of residence. This criterion format is either:

        - A concatenation of a **location type** and a **location code**, separated by a colon, OR
        - Just a **country code** OR
        - `any`

      Available **location types** are:

        - `continent`
        - `country`

      Available **continent codes**:

        - `af` - Africa
        - `na` - North America
        - `oc` - Oceania
        - `an` - Antarctica (_who knows!_)
        - `as` - Asia
        - `eu` - Europe
        - `sa` - South America

      **Country code** must conform to [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).

      + Default: `any`
  + `map`: `map10` (enum[string], optional)
      Servers map ID.

      See also [this file](https://github.com/EpocDotFr/rwrs/blob/master/storage/data/maps.json), part of the RWRS source
      code, which contains all the RWR maps metadata stored in the JSON format.

      + Members
          + `any`
          + `def_dday`
          + `def_lab`
          + `def_lab_koth`
          + `edelweiss1`
          + `edelweiss2`
          + `edelweiss3`
          + `edelweiss4`
          + `edelweiss5`
          + `edelweiss6`
          + `edelweiss7`
          + `edelweiss7_undead`
          + `edelweiss8`
          + `island1`
          + `island2`
          + `island3`
          + `island4`
          + `island5`
          + `island6`
          + `island7`
          + `island8`
          + `island9`
          + `lobby_2p`
          + `map1`
          + `map10`
          + `map11`
          + `map12`
          + `map13`
          + `map13_2`
          + `map14`
          + `map15`
          + `map16`
          + `map17`
          + `map18`
          + `map1_2`
          + `map2`
          + `map3`
          + `map4`
          + `map5`
          + `map6`
          + `map7`
          + `map8`
          + `map8_2`
          + `map9`
          + `pvp1`
          + `rwd_map1`
          + `viper`
      + Default: `any`
  + `type`: `vanilla` (enum[string], optional) - Servers type (used mod or DLC).
      + Members
          + `any`
          + `vanilla`
          + `vanilla.winter`
          + `vanilla.desert`
          + `pvp`
          + `pacific`
          + `edelweiss`
          + `man_vs_world_mp`
          + `man_vs_zombies_mp`
          + `Running_with_the_Dead`
          + `overlord_defense`
          + `lab_defense`
          + `lab_def_koth`
          + `viper`
          + `casus_belli_05`
          + `Running_in_the_Bug_War`
          + `soldiers_at_war_heavy`
          + `SUPERHOT`
          + `superhotrailroad`
          + `snd`
          + `running_from_exterminatus`
      + Default: `any`
  + `mode`: `COOP` (enum[string], optional) - Servers mode (game mode).
      + Members
          + `any`
          + `COOP`
          + `DOM`
          + `PvP`
          + `PvE`
          + `PvPvE`
      + Default: `any`
  + `dedicated`: `true` (enum[string, number], optional) - Whether to filter dedicated servers only. `true` or `1` to enable this filter. `false` or `0` will be ignored and thus disable this filter.
      + Members
          + `true`
          + `1`
          + `false`
          + `0`
  + `ranked`: `true` (enum[string, number], optional) - Whether to filter official servers only. `true` or `1` to enable this filter. `false` or `0` will be ignored and thus disable this filter.
      + Members
          + `true`
          + `1`
          + `false`
          + `0`
  + `not_empty`: `true` (enum[string, number], optional) - Whether to filter non-empty servers only. `true` or `1` to enable this filter. `false` or `0` will be ignored and thus disable this filter.
      + Members
          + `true`
          + `1`
          + `false`
          + `0`
  + `not_full`: `true` (enum[string, number], optional) - Whether to filter non-full servers only. `true` or `1` to enable this filter. `false` or `0` will be ignored and thus disable this filter.
      + Members
          + `true`
          + `1`
          + `false`
          + `0`
  + `limit`: `10` (number, optional) - Return the _n_ first servers of the filtered list.

### Get the list of Servers [GET]

Return the list of Servers. The list may be optionally filtered by several criteria. These last are taken into account
**only** if it they are present in the query string.

::: note
#### Server-side caching

This resource has a cache lifetime of **1 minute**.
:::

+ Request

    + Headers

            Authorization: Token {Your Personal Access Token}

+ Response 200 (application/json)

    An empty list is returned if no Servers were found.

    + Attributes (array[Server Simple Object], fixed-type)

+ Response 400 (application/json)

    One or more arguments are (is) invalid. Check the error message(s) for more information.

    + Attributes (Error Response, fixed-type)

+ Response 403 (application/json)

    Invalid Personal Access Token or Personal Access Token not provided.

    + Attributes (Error Response, fixed-type)

+ Response 503 (application/json)

    Maintenance in progress.

    + Attributes (Error Response, fixed-type)

## Server [/servers/{ip}:{port}]

+ Parameters
    + ip: `31.186.250.67` - The Server IP
    + port: `1235` (integer) - The Server port

### Get a specific Server [GET]

Return the Server corresponding to the given IP address / port couple. This resource returns more information comparing
to the `GET /servers` resource (e.g the player list).

::: note
#### Server-side caching

This resource has a cache lifetime of **1 minute**.
:::

+ Request

    + Headers

            Authorization: Token {Your Personal Access Token}

+ Response 200 (application/json)

    + Attributes (Server Full Object, fixed-type)

+ Response 400 (application/json)

    One or more arguments are (is) invalid. Check the error message(s) for more information.

    + Attributes (Error Response, fixed-type)

+ Response 404 (application/json)

    The Server wasn't found.

    + Attributes (Error Response, fixed-type)

+ Response 403 (application/json)

    Invalid Personal Access Token or Personal Access Token not provided.

    + Attributes (Error Response, fixed-type)

+ Response 503 (application/json)

    Maintenance in progress.

    + Attributes (Error Response, fixed-type)