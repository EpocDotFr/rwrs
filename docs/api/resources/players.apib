# Group Players

TODO

## Player object [/players/{database}/{username}]

+ Parameters
    + database: `invasion` (enum[string]) - The player's database.
      + Members
          + `invasion`
          + `pacific`
    + username: `EPOCDOTFR` - The player's username.

### Get one Player [GET]

Return the Player corresponding to the given database / username couple.

::: note
## Server-side caching

This resource has a cache lifetime of **1 hour**.
:::

+ Request

    + Headers

            Authorization: Token {token}

+ Response 200 (application/json)

        TODO

+ Response 412 (application/json)

    If the `date` parameter is provided: the Player isn't eligible for stats history.

    + Attributes (Error Response, fixed-type)

+ Response 404 (application/json)

    The Player wasn't found or, only when the `date` parameter is provided: no stats found for this player (although he's eligible for stats history).

    + Attributes (Error Response, fixed-type)

+ Response 403 (application/json)

    Invalid token or token not provided.

    + Attributes (Error Response, fixed-type)

+ Response 503 (application/json)

    Maintenance in progress.

    + Attributes (Error Response, fixed-type)